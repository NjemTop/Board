version: "3.9"
services:
  web_server:
    build: .
    container_name: web_server
    ports:
      - "3030:3030"
    volumes:
      - ./logs:/app/logs
      - db-data:/var/lib/sqlite
      - bot_tg_backup:/app/backup
      - db-files:/app/DataBase
    restart: always
    environment:
      - TZ=Europe/Moscow
    command: gunicorn --bind 0.0.0.0:3030 "web_server:create_app()" --access-logfile - --access-logformat '%(h)s - %(u)s [%(t)s] "%(r)s" %(s)s %(b)s "-" "%({User-Agent}i)s"'
    networks:
      network_for_bot:
        ipv4_address: 172.28.1.10

  telegram_bot:
    build: .
    container_name: telegram_bot
    ports:
      - "8443:8443"
    volumes:
      - ./logs:/app/logs
      - db-data:/var/lib/sqlite
      - db-files:/app/DataBase
    restart: always
    environment:
      - TZ=Europe/Moscow
    networks:
      network_for_bot:
        ipv4_address: 172.28.1.20

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: db
    volumes:
      - db-data:/var/lib/sqlite
      - db-files:/app/DataBase
    restart: always
    ports:
      - "5000:5000"
    networks:
      network_for_bot:
        ipv4_address: 172.28.1.30
    healthcheck:
      test: ["CMD", "sqlite3", "/var/lib/sqlite/database.db", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  network_for_bot:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  db-data:
  bot_tg_backup:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/backup
      o: bind
  db-files:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/DataBase
      o: bind